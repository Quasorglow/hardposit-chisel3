extern "P32/PositAdd.v" {
    comb primitive PositAdd[](
        @write_together(1) io_num1: 32,
        @write_together(1) io_num2: 32,
        @write_together(1) io_sub: 1,
        @clk clock: 1,
        @reset reset: 1
    ) -> (
        io_isZero: 1,
        io_isNaR : 1,
        io_out: 32
    );
}

extern "P32/PositMul.v" {
    comb primitive PositMul[](
        @write_together(1) io_num1: 32,
        @write_together(1) io_num2: 32,
        @clk clock: 1,
        @reset reset: 1
    ) -> (
        io_isZero: 1,
        io_isNaR : 1,
        io_out: 32
    );
}

extern "P32/PositCompare.v" {
    comb primitive PositCompare[](
        @write_together(1) io_num1: 32,
        @write_together(1) io_num2: 32,
        @clk clock: 1,
        @reset reset: 1
    ) -> (
        io_lt: 1,
        io_eq : 1,
        io_gt: 32
    );
}

extern "P32/PositDivSqrt.v" {
    primitive PositDivSqrt[](
        @write_together(1) io_num1: 32,
        @write_together(1) io_num2: 32,
        @write_together(1) @interval(1) @go(1) io_validIn: 1,
        @write_together(1) io_sqrtOp: 1,
        @clk clock: 1,
        @reset reset: 1
    ) -> (
        io_readyIn: 1,
        io_out: 32,
        io_isZero: 1,
        io_isNaR : 1,
        @done io_validOut_div: 1,
        @done io_validOut_sqrt: 1,
        io_exceptions: 4,
    );
}
